"""fresh start

Revision ID: 76c63ab379cb
Revises: 
Create Date: 2022-06-23 17:28:34.695590

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '76c63ab379cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_course'))
    )
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_course_description'), ['description'], unique=False)
        batch_op.create_index(batch_op.f('ix_course_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_course_title'), ['title'], unique=False)

    op.create_table('textbook',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('edition', sa.Integer(), nullable=True),
    sa.Column('authors', sa.String(length=100), nullable=False),
    sa.Column('publisher', sa.String(length=100), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('isbn', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_textbook'))
    )
    with op.batch_alter_table('textbook', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_textbook_authors'), ['authors'], unique=False)
        batch_op.create_index(batch_op.f('ix_textbook_isbn'), ['isbn'], unique=False)
        batch_op.create_index(batch_op.f('ix_textbook_publisher'), ['publisher'], unique=False)
        batch_op.create_index(batch_op.f('ix_textbook_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_textbook_url'), ['url'], unique=False)

    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_topic')),
    sa.UniqueConstraint('text', name=op.f('uq_topic_text'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('instructor', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_last_name'), ['last_name'], unique=False)

    op.create_table('assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_assessment_course_id_course')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assessment'))
    )
    with op.batch_alter_table('assessment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_assessment_description'), ['description'], unique=False)
        batch_op.create_index(batch_op.f('ix_assessment_title'), ['title'], unique=False)

    op.create_table('assigned_textbooks',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('textbook_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_assigned_textbooks_course_id_course')),
    sa.ForeignKeyConstraint(['textbook_id'], ['textbook.id'], name=op.f('fk_assigned_textbooks_textbook_id_textbook')),
    sa.PrimaryKeyConstraint('course_id', 'textbook_id', name=op.f('pk_assigned_textbooks'))
    )
    op.create_table('course_topics',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_course_topics_course_id_course')),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name=op.f('fk_course_topics_topic_id_topic')),
    sa.PrimaryKeyConstraint('course_id', 'topic_id', name=op.f('pk_course_topics'))
    )
    op.create_table('enrollments',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_enrollments_course_id_course')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_enrollments_user_id_user')),
    sa.PrimaryKeyConstraint('course_id', 'user_id', name=op.f('pk_enrollments'))
    )
    op.create_table('objective',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_objective_author_id_user')),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name=op.f('fk_objective_topic_id_topic')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_objective'))
    )
    with op.batch_alter_table('objective', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_objective_description'), ['description'], unique=True)

    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('GENERIC', 'TEXTBOOK_SECTION', 'CLASS_MEETING', name='sourcetype'), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_source_author_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_source'))
    )
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_source_title'), ['title'], unique=False)

    op.create_table('assessment_objectives',
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], name=op.f('fk_assessment_objectives_assessment_id_assessment')),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], name=op.f('fk_assessment_objectives_objective_id_objective'))
    )
    op.create_table('assessment_topics',
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], name=op.f('fk_assessment_topics_assessment_id_assessment')),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name=op.f('fk_assessment_topics_topic_id_topic'))
    )
    op.create_table('class_meeting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f('fk_class_meeting_course_id_course')),
    sa.ForeignKeyConstraint(['id'], ['source.id'], name=op.f('fk_class_meeting_id_source')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_class_meeting'))
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('GENERIC', 'SHORT_ANSWER', 'MULTIPLE_CHOICE', 'MULTIPLE_SELECTION', 'CODE_JUMBLE', 'AUTO_CHECK', name='questiontype'), nullable=False),
    sa.Column('prompt', sa.String(), nullable=False),
    sa.Column('explanation', sa.String(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_question_author_id_user')),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], name=op.f('fk_question_objective_id_objective')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_question'))
    )
    op.create_table('source_objectives',
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('objective_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['objective_id'], ['objective.id'], name=op.f('fk_source_objectives_objective_id_objective')),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], name=op.f('fk_source_objectives_source_id_source'))
    )
    op.create_table('textbook_section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('textbook_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['source.id'], name=op.f('fk_textbook_section_id_source')),
    sa.ForeignKeyConstraint(['textbook_id'], ['textbook.id'], name=op.f('fk_textbook_section_textbook_id_textbook')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_textbook_section'))
    )
    op.create_table('topic_sources',
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], name=op.f('fk_topic_sources_source_id_source')),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name=op.f('fk_topic_sources_topic_id_topic'))
    )
    op.create_table('answer_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], name=op.f('fk_answer_option_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_answer_option'))
    )
    op.create_table('assessment_questions',
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], name=op.f('fk_assessment_questions_assessment_id_assessment')),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], name=op.f('fk_assessment_questions_question_id_question'))
    )
    op.create_table('attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('GENERIC', 'TEXT', 'SELECTION', name='responsetype'), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.Column('next_attempt', sa.Date(), nullable=False),
    sa.Column('e_factor', sa.Float(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], name=op.f('fk_attempt_question_id_question')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_attempt_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attempt'))
    )
    op.create_table('auto_check_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('regex', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['question.id'], name=op.f('fk_auto_check_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auto_check_question'))
    )
    op.create_table('code_jumble_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['question.id'], name=op.f('fk_code_jumble_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_code_jumble_question'))
    )
    op.create_table('jumble_block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('correct_index', sa.Integer(), nullable=False),
    sa.Column('correct_indent', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], name=op.f('fk_jumble_block_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_jumble_block'))
    )
    op.create_table('multiple_choice_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['question.id'], name=op.f('fk_multiple_choice_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_multiple_choice_question'))
    )
    op.create_table('multiple_selection_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['question.id'], name=op.f('fk_multiple_selection_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_multiple_selection_question'))
    )
    op.create_table('short_answer_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['question.id'], name=op.f('fk_short_answer_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_short_answer_question'))
    )
    op.create_table('selection_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['attempt.id'], name=op.f('fk_selection_attempt_id_attempt')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_selection_attempt'))
    )
    op.create_table('text_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('response', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['attempt.id'], name=op.f('fk_text_attempt_id_attempt')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_text_attempt'))
    )
    op.create_table('selected_answers',
    sa.Column('attempt_id', sa.Integer(), nullable=True),
    sa.Column('option_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['selection_attempt.id'], name=op.f('fk_selected_answers_attempt_id_selection_attempt')),
    sa.ForeignKeyConstraint(['option_id'], ['answer_option.id'], name=op.f('fk_selected_answers_option_id_answer_option'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('selected_answers')
    op.drop_table('text_attempt')
    op.drop_table('selection_attempt')
    op.drop_table('short_answer_question')
    op.drop_table('multiple_selection_question')
    op.drop_table('multiple_choice_question')
    op.drop_table('jumble_block')
    op.drop_table('code_jumble_question')
    op.drop_table('auto_check_question')
    op.drop_table('attempt')
    op.drop_table('assessment_questions')
    op.drop_table('answer_option')
    op.drop_table('topic_sources')
    op.drop_table('textbook_section')
    op.drop_table('source_objectives')
    op.drop_table('question')
    op.drop_table('class_meeting')
    op.drop_table('assessment_topics')
    op.drop_table('assessment_objectives')
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_source_title'))

    op.drop_table('source')
    with op.batch_alter_table('objective', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_objective_description'))

    op.drop_table('objective')
    op.drop_table('enrollments')
    op.drop_table('course_topics')
    op.drop_table('assigned_textbooks')
    with op.batch_alter_table('assessment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_assessment_title'))
        batch_op.drop_index(batch_op.f('ix_assessment_description'))

    op.drop_table('assessment')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_last_name'))
        batch_op.drop_index(batch_op.f('ix_user_first_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('topic')
    with op.batch_alter_table('textbook', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_textbook_url'))
        batch_op.drop_index(batch_op.f('ix_textbook_title'))
        batch_op.drop_index(batch_op.f('ix_textbook_publisher'))
        batch_op.drop_index(batch_op.f('ix_textbook_isbn'))
        batch_op.drop_index(batch_op.f('ix_textbook_authors'))

    op.drop_table('textbook')
    with op.batch_alter_table('course', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_course_title'))
        batch_op.drop_index(batch_op.f('ix_course_name'))
        batch_op.drop_index(batch_op.f('ix_course_description'))

    op.drop_table('course')
    # ### end Alembic commands ###
